{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qif (tabId === \"chloropleth\" && !chloroplethLoaded) { loadScript(\"chloropleth.js\"); chloroplethLoaded = true; } else if (tabId === \"rent-control\" && !rentControlLoaded) { loadScript(\"rent_control.js\"); rentControlLoaded = true; } else if ( (tabId === \"bc-rent\" || tabId === \"bc-own\") && !pieChartsLoaded ) { loadPieCharts(); pieChartsLoaded = true; } } // Event listeners for tab clicks document .getElementById(\"chloropleth-tab\") .addEventListener(\"click\", function () { switchTab(\"chloropleth\"); }); document .getElementById(\"rent-control-tab\") .addEventListener(\"click\", function () { switchTab(\"rent-control\"); }); // Add event listener for the new tab document .getElementById(\"bc-rent-tab\") .addEventListener(\"click\", function () { switchTab(\"bc-rent\"); }); // Add event listener for the new tab document .getElementById(\"bc-own-tab\") .addEventListener(\"click\", function () { switchTab(\"bc-own\"); }); // Function to dynamically load JavaScript files function loadScript(scriptSrc) { var script = document.createElement(\"script\"); script.src = scriptSrc; document.head.appendChild(script); } // Function to load pie charts function loadPieCharts() { // Sample data for demonstration const dataRent = [ { label: \"Over the age of 82\", percent: 85 }, { label: \"Under the age of 82\", percent: 15 }, ]; const dataOwn = [ { label: \"Over the age of 82\", percent: 81 }, { label: \"Under the age of 82\", percent: 19 }, ]; // Call createPieChart function with containerId and data createPieChart(\"pie-chart-container-rent\", dataRent); createLegend(\"legend-container-rent\", dataRent); createPieChart(\"pie-chart-container-own\", dataOwn); createLegend(\"legend-container-own\", dataOwn); } // Function to create a pie chart function createPieChart(containerId, data) { const width = 300; const height = 300; const radius = Math.min(width, height) / 2; const color = d3 .scaleOrdinal() .domain(data.map((d) => d.label)) .range(d3.schemeCategory10); const svg = d3 .select(`#${containerId}`) .append(\"svg\") .attr(\"width\", width) .attr(\"height\", height) .append(\"g\") .attr(\"transform\", `translate(${width / 2},${height / 2})`); const pie = d3.pie().value((d) => d.percent); const arc = d3.arc().innerRadius(0).outerRadius(radius); const arcs = svg .selectAll(\"arc\") .data(pie(data)) .enter() .append(\"g\") .attr(\"class\", \"arc\"); arcs .append(\"path\") .attr(\"fill\", (d) => color(d.data.label)) .attr(\"d\", arc); arcs .append(\"text\") .attr(\"transform\", (d) => `translate(${arc.centroid(d)})`) .attr(\"text-anchor\", \"middle\") .attr(\"font-size\", \"0.85em\") .text((d) => `${d.data.percent}%`); } // Function to create legend function createLegend(legendContainerId, data) { const legendContainer = d3.select(`#${legendContainerId}`); const legend = legendContainer .selectAll(\".legend-item\") .data(data) .enter() .append(\"div\") .attr(\"class\", \"legend-item\") .style(\"width\", \"25%\") // Set width to a quarter of the container width .style(\"padding\", \"5px\"); // Add padding to each legend item const legendColor = legend .append(\"div\") .attr(\"class\", \"legend-color\") .style( \"background-color\", (d) => d3.schemeCategory10[data.indexOf(d)] ) .style(\"display\", \"inline-block\") // Ensure color block and text are inline .style(\"width\", \"20px\") // Set width of color block .style(\"height\", \"20px\"); // Set height of color block // Center text vertically and horizontally legendColor.style(\"line-height\", \"20px\"); // Ensure vertical centering legendColor.style(\"text-align\", \"center\"); // Ensure horizontal centering legend .append(\"div\") .attr(\"class\", \"legend-text\") .style(\"display\", \"inline-block\") // Ensure color block and text are inline .style(\"padding-left\", \"5px\") // Add padding to the left of the text .style(\"vertical-align\", \"top\") // Align text vertically .text((d) => `${d.label}`); } // Initially load chloropleth.js when the page loads window.onload = function () { switchTab(\"chloropleth\"); }; </script> </body> </html>\\E$"}
